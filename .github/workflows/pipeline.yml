# name: Deployment piepline

# on:
#   push:
#     branches:
#       - master
#   pull_request:
#     branches: [master]
#     types: [opened, synchronize]

# jobs:
#   simple_deployment_pipeline:
#     runs-on: ubuntu-18.04
#     steps:
#       - uses: actions/checkout@v2
#       - uses: actions/setup-node@v1
#         with:
#           node-version: "12.x"
#       - name: npm install
#         run: npm install
#       - name: lint
#         run: npm run eslint
#       - name: build
#         run: npm run build
#       - name: e2e tests
#         uses: cypress-io/github-action@v2
#         with:
#           command: npm run test:e2e
#           start: npm run start
#           wait-on: http://localhost:5000
#       - name: Deployment
#         if: ${{ github.event_name == 'push' }}
#         uses: akhileshns/heroku-deploy@v3.12.12
#         with:
#           heroku_api_key: ${{secrets.HEROKU_API_KEY}}
#           heroku_app_name: "cicd-tst"
#           heroku_email: "AYAYAehehe@protonmail.com"
#           healthcheck: "https://cicd-tst.herokuapp.com/health"
#           checkstring: "ok"
#           delay: 5
#           rollbackonhealthcheckfailed: true
#       - name: Bump version and push tag
#         if: ${{ github.event_name == 'push' }}
#         uses: anothrNick/github-tag-action@1.34.0
#         env:
#           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#           WITH_V: true
#           INITIAL_VERSION: 0.0.0
#           DEFAULT_BUMP: patch
name: Testing stuff

on:
  push:
    branches:
      - master

jobs:
  a_test_job:
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2
      - name: gihub context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: echo "$GITHUB_CONTEXT"
      - name: commits
        env:
          COMMITS: ${{ toJson(github.event.commits) }}
        run: echo "$COMMITS"
      - name: commit messages
        env:
          COMMIT_MESSAGES: ${{ toJson(github.event.commits.*.message) }}
        run: echo "$COMMIT_MESSAGES"
      - name: Looking for '#SKIP'
        env:
          ASSEMBLED_MESSAGES: ${{ join(github.event.commits.*.message)}}
          if: ${{ contains($ASSEMBLED_MESSAGES, '#SKIP')}}
          run: echo "$ASSEMBLED_MESSAGES"
      - name: attempting to use the last variable
          run: echo "$ASSEMBLED_MESSAGES"
      - name: negative IF
          if: ${{ !contains(ASSEMBLED_MESSAGES, '#SKIP') }}
          run: echo "I should not be seeing this."
